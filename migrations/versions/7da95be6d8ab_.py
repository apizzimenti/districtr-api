"""Add roles

Revision ID: 7da95be6d8ab
Revises: a414cc45796b
Create Date: 2019-01-21 16:22:35.787043

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "7da95be6d8ab"
down_revision = "a414cc45796b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roles",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("role_id", "user_id"),
    )
    op.add_column("place", sa.Column("description", sa.Text(), nullable=True))
    op.add_column("plan", sa.Column("place_id", sa.Integer(), nullable=False))
    op.alter_column("plan", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.create_foreign_key(None, "plan", "place", ["place_id"], ["id"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "plan", type_="foreignkey")
    op.alter_column("plan", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_column("plan", "place_id")
    op.drop_column("place", "description")
    op.drop_table("roles")
    op.drop_table("role")
    # ### end Alembic commands ###
